/**
 * File order:
 * - tags
 * - attributes
 * - components
 * - layout
 * - theme
 * - helpers
 *
 * Selector order:
 * - positioning
 * - display & box-model
 * - color
 * - text
 * - other
 *
 * Follows Necolas' Idiomatic-CSS principles
 * https://github.com/necolas/idiomatic-css
 *
 * Process CSS with Myth
 * http://myth.io/
 *
 * Lint with stylelint to enforce style rules
 * https://github.com/stylelint/stylelint
 */

/* ==========================================================================
   Tags
   ========================================================================== */

:root {
  --primary-color: #2c2c57;
  --secondary-color: #5acc95;
  --scale: 1.618;
  --scale-em: calc(var(--scale) * 1em);
}

* {
  font-family: inherit;
  line-height: inherit;
  color: inherit;
  margin: 0;
}

/* \(*+*)/ */
* + * {
  margin-top: var(--scale-em);
}

html {
  font-size: 115%;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  line-height: var(--scale);
  color: #333;
}

@media (max-width: 26em) {
  :root {
    --scale: 1.414;
  }

  html { font-size: 1rem; }
}

body,
li {
  margin-top: 0;
}

label {
  display: block;
}

label + * {
  margin-top: calc(1em / var(--scale));
}

img,
picture,
video,
svg {
  max-width: 100%;
}


h1 {
  font-size: calc(var(--scale) * var(--scale) * 1em);
}

h2 {
  font-size: var(--scale-em);
}

article,
p,
ol,
ul {
  max-width: 35em;
}

/* ==========================================================================
   Attributes
   ========================================================================== */

/* ==========================================================================
   Components
   ========================================================================== */
.chat {
  background: url('asanoha-400px.png');
}

.chat ol {
  list-style: none;
  padding: 1em;
}

.chat p:not(footer p) {
  background-color: white;
  max-width: -webkit-max-content;
  max-width: max-content;
  padding: calc(1em / var(--scale)) calc(var(--scale) * 1em);
}
